// Generated by CoffeeScript 1.11.1
(function() {
  var ChildProcess, Command, InstallCommand, Promise,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Promise = require('bluebird');

  Command = require('./Command');

  ChildProcess = require('child_process');

  InstallCommand = (function(superClass) {
    extend(InstallCommand, superClass);

    function InstallCommand() {
      return InstallCommand.__super__.constructor.apply(this, arguments);
    }

    InstallCommand.prototype.execute = function(serial, callback) {
      var action, isSuccess, resolver, returnValue, spawn;
      resolver = Promise.defer();
      spawn = ChildProcess.spawn;
      action = spawn(this.cmd, this.args);
      isSuccess = null;
      returnValue = true;
      action.stdout.on('data', function(data) {
        var resultInfo;
        resultInfo = new Buffer(data).toString();
        resultInfo = resultInfo.replace(/\n/g, '');
        if (resultInfo.indexOf('success') > -1) {
          return resolver.resolve(returnValue);
        } else {
          returnValue = false;
          isSuccess = new Error('error: install failed');
          return resolver.reject(isSuccess);
        }
      });
      action.stderr.on('data', function(data) {
        var errorInfo;
        errorInfo = new Buffer(data).toString();
        if (errorInfo !== null) {
          errorInfo = errorInfo.replace(/\n/g, '.');
        }
        isSuccess = new Error(errorInfo);
        return resolver.reject(isSuccess);
      });
      action.on('close', function(data) {});
      return resolver.promise["finally"](function() {
        return callback(isSuccess, returnValue);
      });
    };

    return InstallCommand;

  })(Command);

  module.exports = InstallCommand;

}).call(this);

//# sourceMappingURL=InstallCommand.js.map
